"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getNativeTypeName = exports.MySQLType = void 0;
var MySQLType;
(function (MySQLType) {
    MySQLType[MySQLType["DECIMAL"] = 0] = "DECIMAL";
    MySQLType[MySQLType["TINY"] = 1] = "TINY";
    MySQLType[MySQLType["SHORT"] = 2] = "SHORT";
    MySQLType[MySQLType["LONG"] = 3] = "LONG";
    MySQLType[MySQLType["FLOAT"] = 4] = "FLOAT";
    MySQLType[MySQLType["DOUBLE"] = 5] = "DOUBLE";
    MySQLType[MySQLType["NULL"] = 6] = "NULL";
    MySQLType[MySQLType["TIMESTAMP"] = 7] = "TIMESTAMP";
    MySQLType[MySQLType["LONGLONG"] = 8] = "LONGLONG";
    MySQLType[MySQLType["INT24"] = 9] = "INT24";
    MySQLType[MySQLType["DATE"] = 10] = "DATE";
    MySQLType[MySQLType["TIME"] = 11] = "TIME";
    MySQLType[MySQLType["DATETIME"] = 12] = "DATETIME";
    MySQLType[MySQLType["YEAR"] = 13] = "YEAR";
    MySQLType[MySQLType["NEWDATE"] = 14] = "NEWDATE";
    MySQLType[MySQLType["VARCHAR"] = 15] = "VARCHAR";
    MySQLType[MySQLType["BIT"] = 16] = "BIT";
    MySQLType[MySQLType["JSON"] = 245] = "JSON";
    MySQLType[MySQLType["NEWDECIMAL"] = 246] = "NEWDECIMAL";
    MySQLType[MySQLType["ENUM"] = 247] = "ENUM";
    MySQLType[MySQLType["SET"] = 248] = "SET";
    MySQLType[MySQLType["TINY_BLOB"] = 249] = "TINY_BLOB";
    MySQLType[MySQLType["MEDIUM_BLOB"] = 250] = "MEDIUM_BLOB";
    MySQLType[MySQLType["LONG_BLOB"] = 251] = "LONG_BLOB";
    MySQLType[MySQLType["BLOB"] = 252] = "BLOB";
    MySQLType[MySQLType["VAR_STRING"] = 253] = "VAR_STRING";
    MySQLType[MySQLType["STRING"] = 254] = "STRING";
    MySQLType[MySQLType["GEOMETRY"] = 255] = "GEOMETRY";
})(MySQLType = exports.MySQLType || (exports.MySQLType = {}));
/**
 * MySQL Native types -> SQL type
 */
const MySqlNativeToMySqlType = {
    [MySQLType.DECIMAL]: 'decimal',
    [MySQLType.NEWDECIMAL]: 'decimal',
    [MySQLType.TINY]: 'tinyint',
    [MySQLType.SHORT]: 'smallint',
    [MySQLType.LONG]: 'int',
    [MySQLType.INT24]: 'mediumint',
    [MySQLType.LONGLONG]: 'bigint',
    [MySQLType.NEWDATE]: 'datetime',
    [MySQLType.TIMESTAMP]: 'timestamp',
    [MySQLType.DATETIME]: 'datetime',
    [MySQLType.TIME]: 'time',
    [MySQLType.TINY_BLOB]: 'tinytext',
    [MySQLType.MEDIUM_BLOB]: 'mediumtext',
    [MySQLType.LONG_BLOB]: 'longtext',
    [MySQLType.BLOB]: 'text',
    [MySQLType.VAR_STRING]: 'varchar',
    [MySQLType.STRING]: 'binary',
    [MySQLType.FLOAT]: 'float',
    [MySQLType.DOUBLE]: 'double',
};
function getNativeTypeName(typeId) {
    if (typeId in MySqlNativeToMySqlType) {
        return MySqlNativeToMySqlType[typeId];
    }
    throw new Error(`Unsupported mapping for data type: ${typeId}`);
}
exports.getNativeTypeName = getNativeTypeName;
//# sourceMappingURL=MySQLType.js.map